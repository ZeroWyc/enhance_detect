# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]

# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
#  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2        # 实际特征图输出大小变为：320 * 320
#  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4       # 实际特征图输出大小变为：160 * 160
#  - [-1, 3, C2f, [128, True]]
#  - [-1, 1, Conv, [256, 3, 2]] # 3-P3/8       # 实际特征图输出大小变为：80 * 80
#  - [-1, 6, C2f, [256, True]]
#  - [-1, 1, SCDown, [512, 3, 2]] # 5-P4/16    # 实际特征图输出大小变为：40 * 40
#  - [-1, 6, C2f, [512, True]]
#  - [-1, 1, SCDown, [1024, 3, 2]] # 7-P5/32   # 实际特征图输出大小变为：20 * 20
#  - [-1, 3, C2f, [1024, True]]
#  - [-1, 1, SPPF, [1024, 5]] # 9              # 实际特征图输出大小变为：20 * 20
#  - [-1, 1, PSA, [1024]] # 10                 # 实际特征图输出大小变为：20 * 20
  - [-1, 1, VanillaNet_6, [1024, 1]]   # 0-P3/8
  - [-1, 1, VanillaNet_6, [2048, 2]]   # 1-P4/16
  - [-1, 1, VanillaNet_6, [4096, 3]]  # 2-P4/32
# YOLOv8.0n head
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]   # 上采样实际特征图输出大小变为：40 * 40
  - [[-1, 1], 1, Concat, [1]] # cat backbone P4  # 实际特征图输出大小变为：40 * 40
  - [-1, 3, C2f, [512]] # 13

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]   # 上采样实际特征图输出大小变为：80 * 80
  - [[-1, 0], 1, Concat, [1]] # cat backbone P3  # 实际特征图输出大小变为：80 * 80
  - [-1, 3, C2f, [256]] # 16 (P3/8-small)

  - [-1, 1, Conv, [256, 3, 2]]                   # 下采样实际特征图输出大小变为：40 * 40
  - [[-1, 5], 1, Concat, [1]] # cat head P4     # 实际特征图输出大小变为：40 * 40
  - [-1, 3, C2f, [512]] # 19 (P4/16-medium)

  - [-1, 1, SCDown, [512, 3, 2]]                 # 下采样实际特征图输出大小变为：20 * 20
  - [[-1, 2], 1, Concat, [1]] # cat head P5     # 实际特征图输出大小变为：20 * 20
  - [-1, 3, C2fCIB, [1024, True, True]] # 22 (P5/32-large)

  - [[8, 11, 14], 1, v10Detect, [nc]] # Detect(P3, P4, P5)

